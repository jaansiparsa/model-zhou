Unsupported operator aten::max_pool2d encountered 3 time(s)
[32m[2025-03-18 01:33:24 alexnet][0m[33m(main.py 74)[0m: INFO AlexNet(
  #params: 57.82M, #flops: 95.59M
  (features): Sequential(
    #params: 2.47M, #flops: 40.24M
    (0): Conv2d(
      3, 64, kernel_size=(11, 11), stride=(4, 4), padding=(2, 2)
      #params: 23.3K, #flops: 5.95M
    )
    (1): ReLU()
    (2): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(
      64, 192, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2)
      #params: 0.31M, #flops: 15.05M
    )
    (4): ReLU()
    (5): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Conv2d(
      192, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
      #params: 0.66M, #flops: 5.97M
    )
    (7): ReLU()
    (8): Conv2d(
      384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
      #params: 0.88M, #flops: 7.96M
    )
    (9): ReLU()
    (10): Conv2d(
      256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
      #params: 0.59M, #flops: 5.31M
    )
    (11): ReLU()
    (12): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (13): AdaptiveAvgPool2d(
      output_size=(6, 6)
      #params: 0, #flops: 0.26K
    )
  )
  (classifier): Sequential(
    #params: 55.35M, #flops: 55.35M
    (0): Dropout(p=0.5, inplace=False)
    (1): Linear(
      in_features=9216, out_features=4096, bias=True
      #params: 37.75M, #flops: 37.75M
    )
    (2): ReLU()
    (3): Dropout(p=0.5, inplace=False)
    (4): Linear(
      in_features=4096, out_features=4096, bias=True
      #params: 16.78M, #flops: 16.78M
    )
    (5): ReLU()
    (6): Linear(
      in_features=4096, out_features=200, bias=True
      #params: 0.82M, #flops: 0.82M
    )
  )
)
[32m[2025-03-18 01:33:24 alexnet][0m[33m(main.py 75)[0m: INFO number of params: 57.82324 M
[32m[2025-03-18 01:33:24 alexnet][0m[33m(main.py 76)[0m: INFO flops: 95.588608 MFLOPS
[32m[2025-03-18 01:33:24 alexnet][0m[33m(main.py 92)[0m: INFO Start training
Traceback (most recent call last):                                                                                                        
  File "/home/jaansi/fa24-nmep-hw2/main.py", line 261, in <module>
    main(config)
  File "/home/jaansi/fa24-nmep-hw2/main.py", line 95, in main
    train_acc1, train_loss, epoch_time = train_one_epoch(config, model, criterion, data_loader_train, optimizer, epoch)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jaansi/fa24-nmep-hw2/main.py", line 149, in train_one_epoch
    outputs = model(samples)
              ^^^^^^^^^^^^^^
  File "/home/jaansi/miniconda3/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jaansi/miniconda3/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jaansi/fa24-nmep-hw2/models/alexnet.py", line 38, in forward
    x = self.classifier(x)
        ^^^^^^^^^^^^^^^^^^
  File "/home/jaansi/miniconda3/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jaansi/miniconda3/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jaansi/miniconda3/lib/python3.12/site-packages/torch/nn/modules/container.py", line 250, in forward
    input = module(input)
            ^^^^^^^^^^^^^
  File "/home/jaansi/miniconda3/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jaansi/miniconda3/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jaansi/miniconda3/lib/python3.12/site-packages/torch/nn/modules/dropout.py", line 70, in forward
    return F.dropout(input, self.p, self.training, self.inplace)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jaansi/miniconda3/lib/python3.12/site-packages/torch/nn/functional.py", line 1425, in dropout
    _VF.dropout_(input, p, training) if inplace else _VF.dropout(input, p, training)
                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 576.00 MiB. GPU 0 has a total capacity of 10.75 GiB of which 135.69 MiB is free. Process 520312 has 736.00 MiB memory in use. Process 2202170 has 4.27 GiB memory in use. Including non-PyTorch memory, this process has 5.61 GiB memory in use. Of the allocated memory 4.83 GiB is allocated by PyTorch, and 612.36 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
